{"version":3,"sources":["common/dateToString.js","store.js","components/AddBtn.js","components/FormArea.js","components/Header.js","components/ToDo.js","routes/Home.js","routes/Detail.js","components/App.js","index.js"],"names":["dateToString","date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","storageKey","toDos","createSlice","name","initialState","Date","ToDoList","JSON","parse","localStorage","getItem","drawState","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","isOpen","position","Position","BOTTOM","size","Drawer","SIZE_LARGE","usePortal","reducers","add","payload","stateItem","title","text","id","substr","getTime","checked","unshift","tmpObj","push","setItem","stringify","arrObj","update","state","updateToDo","map","toDo","remove","action","filter","obj","check","setDraw","setDate","console","log","toDoRefresh","filterData","parseInt","actions","configureStore","reducer","AddBtn","eventProps","className","onClick","icon","iconSize","Icon","intent","Intent","NONE","connect","dispatch","addToDo","closeFunc","type","useState","setText","setTitle","history","useHistory","useEffect","onSubmit","e","preventDefault","alert","alwaysRenderInput","INTENT_PRIMARY","maxLength","placeholder","value","onChange","maxLines","minLines","multiline","setChangeDate","d","formatDate","toLocaleString","year","month","day","parseDate","str","replace","popoverProps","BOTTOM_LEFT","disabled","minDate","ownProps","onDeleteBtn","onChecked","titleClass","classNames","target","large","to","fill","setDrawState","options","onToDoRefresh","handleClose","handleOpen","onClose","Classes","DRAWER_BODY","DIALOG_BODY","length","key","match","params","find","style","padding","App","path","exact","component","Home","Detail","ReactDom","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a0fade79.chunk.js","sourcesContent":["export const dateToString = (date) => {\n        let formatDate = date.getFullYear() + \"-\" + \n                        String(date.getMonth() + 1).padStart(2,'0') + \"-\" + \n                        String(date.getDate()).padStart(2,'0') + \" \" +\n                        String(date.getHours()).padStart(2,'0') + \":\" +\n                        String(date.getMinutes()).padStart(2,'0') + \":\" +\n                        String(date.getSeconds()).padStart(2,'0');\n\n        return formatDate;\n}","import { Drawer, Position } from \"@blueprintjs/core\";\nimport {configureStore, createSlice} from \"@reduxjs/toolkit\";\nimport {dateToString} from './common/dateToString';\n\nconst storageKey = \"Keepbang.ToDo.Storage\";\n\nconst initState = () => {\n    return JSON.parse(localStorage.getItem(storageKey))?JSON.parse(localStorage.getItem(storageKey)):[];\n}\n\nconst toDos = createSlice({\n    name: 'toDoReducer',\n    initialState: {\n        date : dateToString(new Date()),\n        ToDoList: initState(),\n        drawState: {\n            autoFocus: true,\n            canEscapeKeyClose: true,\n            canOutsideClickClose: true,\n            enforceFocus: true,\n            hasBackdrop: true,\n            isOpen: false,\n            position: Position.BOTTOM,\n            size: Drawer.SIZE_LARGE,\n            usePortal: true,\n        }\n    },\n    reducers: {\n        add: ({date,ToDoList}, {payload}) => {\n            let stateItem = {title: payload.title, text: payload.text, id: new Date(date.substr(0,10)+'T'+dateToString(new Date()).substr(11)).getTime(), checked: false};\n            ToDoList.unshift(stateItem);\n            let tmpObj = localStorage.getItem(storageKey);\n            if(tmpObj === null){\n                tmpObj = [];\n                tmpObj.push(stateItem);\n                localStorage.setItem(storageKey,JSON.stringify(tmpObj));\n            }else{\n                let arrObj = JSON.parse(tmpObj);\n                arrObj.unshift(stateItem);\n                localStorage.setItem(storageKey,JSON.stringify(arrObj));\n            }\n        },\n        update: (state, {payload}) => {\n            let stateItem = {title: payload.title, text: payload.text, id: payload.id, checked: false};\n            let updateToDo = state.ToDoList.map(toDo => (toDo.id === stateItem.id?stateItem:toDo));\n            localStorage.setItem(storageKey,JSON.stringify(updateToDo));\n            return {...state,ToDoList : updateToDo}\n        },\n        remove: (state, action) => {\n            let arrObj = JSON.parse(localStorage.getItem(storageKey));\n            arrObj = arrObj.filter(obj => obj.id !== action.payload);\n            localStorage.setItem(storageKey,JSON.stringify(arrObj));\n\n            return {...state,ToDoList : state.ToDoList.filter(toDo => toDo.id !== action.payload)};\n        },\n        check: (state, {payload}) => {\n            let updateToDo = state.ToDoList.map(toDo => (toDo.id === payload.id?{...toDo,checked:payload.checked}:toDo));\n            localStorage.setItem(storageKey,JSON.stringify(updateToDo));\n            return {...state,ToDoList : updateToDo}\n        },\n        setDraw: (state,action) => {\n            return {...state,drawState: {...state.drawState,...action.payload}}\n        },\n        setDate: (state,action) => {\n            console.log(action);\n            return {...state, date: action.payload}\n        },\n        toDoRefresh: (state, action) => {\n            let filterData = state.ToDoList.filter(toDo => new Date(state.date.substr(0,11) + \"00:00:00\") < new Date(parseInt(toDo.id)));\n            localStorage.setItem(storageKey, JSON.stringify(filterData));\n            return {...state, ToDoList: filterData}\n        }\n    }\n});\n\nexport const {\n    add,\n    update,\n    remove,\n    check,\n    setDraw,\n    setDate,\n    toDoRefresh\n} = toDos.actions\n\nexport default configureStore({reducer: toDos.reducer});","import { Icon, Intent } from '@blueprintjs/core'\nimport React from 'react'\nimport '../css/AddBtn.scss'\n\nconst AddBtn = ({eventProps}) => {\n    return <>\n        <div className=\"add_btn\" onClick={eventProps}>\n            <Icon icon=\"add-to-artifact\" iconSize={Icon.SIZE_LARGE} intent={Intent.NONE}/>\n        </div>\n    </>\n}\n\nexport default AddBtn;","import { Button, Divider, EditableText, H3 } from '@blueprintjs/core';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { add, update } from '../store';\nimport '../css/FormArea.scss';\nimport { INTENT_PRIMARY } from '@blueprintjs/core/lib/esm/common/classes';\nimport { useHistory } from 'react-router-dom';\n\nconst FormArea = ({addToDo,updateToDo, closeFunc, toDo, type}) => {\n\n    const [text,setText] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        if(typeof toDo !== \"undefined\" && type === \"update\"){\n            setTitle(toDo.title);\n            setText(toDo.text);\n        }\n        \n    }, [type,toDo])\n\n    function onChangeText(value){\n        setText(value);\n    }\n\n    function onChangeTitle(value){\n        setTitle(value);\n    }\n\n    function onSubmit(e){\n        e.preventDefault();\n        if(title === \"\"){\n            alert(\"Title을 입력해주세요\");\n            return;\n        }\n        if(type === \"update\" && typeof closeFunc !== \"function\"){\n            updateToDo({title, text,id: toDo.id});\n            history.push('/');\n        }else{\n            addToDo({title,text});\n            closeFunc();\n        }\n    }\n\n    return <>\n        <form onSubmit={onSubmit} className=\"form_area\">\n            <H3>\n                <EditableText\n                    alwaysRenderInput={true}\n                    intent={INTENT_PRIMARY}\n                    maxLength={100}\n                    placeholder=\"Write title...\"\n                    value={title}\n                    onChange={onChangeTitle}\n                />\n            </H3>\n            <Divider />\n            <EditableText\n                    alwaysRenderInput={true}\n                    intent={INTENT_PRIMARY}\n                    maxLines={7}\n                    minLines={5}\n                    multiline={true}\n                    placeholder=\"Write ToDo...\"\n                    onChange={onChangeText}\n                    value={text}\n                />\n            <Divider />\n            <div className=\"add_btn_area\">\n                <Button\n                    className=\"add__btn\"\n                    type=\"submit\"\n                    icon={typeof closeFunc === \"function\"?\"add\":\"changes\"}\n                    intent={typeof closeFunc === \"function\"?\"success\":\"primary\"}\n                    text={typeof closeFunc === \"function\"?\"ADD\":\"UPDATE\"}\n                />\n            </div>\n        </form>\n    </>\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addToDo: (obj) => dispatch(add(obj)),\n        updateToDo: (obj) => dispatch(update(obj))\n    };\n}\n\nexport default connect(null,mapDispatchToProps)(FormArea);","import { Position } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {dateToString} from '../common/dateToString';\n\nimport '../css/Header.scss';\nimport { setDate } from '../store';\n\n\nconst Header = ({date, id,setChangeDate}) => {\n\n    useEffect(() => {\n        if(typeof id !== \"undefined\"){\n            setChangeDate(dateToString(new Date(parseInt(id))));\n        }\n    }, [setChangeDate,id])\n\n    const handleDateChange = (e) => {\n        setChangeDate(dateToString(e));\n    }\n\n\n    return <>\n        <h2 className=\"home_title\">\n            <DateInput\n                className=\"home__date\"\n                formatDate={date => date.toLocaleString(\"ko-KR\",{year: \"numeric\",month:\"2-digit\",day:\"2-digit\"})}\n                onChange={handleDateChange}\n                parseDate={str => new Date(str)}\n                placeholder={\"YYYY-MM-DD\"}\n                value={new Date(date.replace(' ','T'))}\n                popoverProps={{ position: Position.BOTTOM_LEFT }}\n                disabled={id?true:false}\n                minDate={new Date()}\n                />\n        </h2>\n    </>\n}\n\nfunction mapStateToProps(state){\n    return {\n        date: state.date\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setChangeDate: d => dispatch(setDate(d))\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from \"classnames\";\n\nimport { remove,check } from '../store';\n\nimport '../css/ToDo.scss';\nimport { Button, Checkbox } from '@blueprintjs/core';\n\nfunction ToDo({id,title,checked, onDeleteBtn, onChecked}) {\n\n    const onChangeHandler = (e) => {\n        onChecked({id,checked:e.target.checked})\n    }\n\n    const titleClass = classNames(\n        'todo___text',\n        (checked?'disabled':'enabled')\n    )\n\n    const setDate = (id) => {\n        let date = new Date(parseInt(id));\n        let formatDate = date.getFullYear() + \"-\" + \n                        String(date.getMonth() + 1).padStart(2,'0') + \"-\" + \n                        String(date.getDate()).padStart(2,'0') + \" \" +\n                        String(date.getHours()).padStart(2,'0') + \":\" +\n                        String(date.getMinutes()).padStart(2,'0') + \":\" +\n                        String(date.getSeconds()).padStart(2,'0');\n\n        return formatDate;\n    }\n    \n    return(\n        <li id={id} className=\"todo__li\">\n            <Checkbox className=\"todo___check\" checked={(typeof checked === \"undefined\"?false:checked)} onChange={onChangeHandler} large={true}/>\n                <Link className={titleClass} to={checked?`/#`:`/${id}`}>\n                    {title}\n                    <div className=\"todo___date\">{setDate(id)}</div>\n                </Link>\n            <div className=\"btn__area\">\n                <Button onClick={onDeleteBtn} fill={true} className=\"del___btn\" icon=\"trash\" intent=\"danger\"/>\n            </div>\n        </li>\n    )\n}\n\nfunction mapDispatchToProps(dispatch,ownProps){\n    return {\n        onDeleteBtn: () => dispatch(remove(ownProps.id)),\n        onChecked: (obj) => dispatch(check(obj))\n    };\n}\n\nexport default connect(null,mapDispatchToProps)(ToDo);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setDraw, toDoRefresh } from '../store';\nimport '../css/Home.scss';\n\nimport AddBtn from '../components/AddBtn';\nimport FormArea from '../components/FormArea';\nimport Header from '../components/Header';\nimport ToDo from '../components/ToDo';\n\nimport {dateToString} from '../common/dateToString';\n\nimport { Button, Classes, Drawer } from '@blueprintjs/core';\n\nfunction Home({toDos, drawState, setDrawState, onToDoRefresh}) {\n\n    useEffect(() => {\n        onToDoRefresh();\n    }, [onToDoRefresh])\n\n    const handleClose = () => {setDrawState({isOpen:false})};\n    const handleOpen = () => {setDrawState({isOpen:true})};\n\n    return (\n        <>\n            <Header/>\n            <Drawer\n                icon=\"annotation\"\n                onClose={handleClose}\n                title=\"Add ToDo\"\n                {...drawState}\n            >\n                <div className={Classes.DRAWER_BODY}>\n                    <div className={Classes.DIALOG_BODY}>\n                        <FormArea closeFunc={handleClose}/>\n                    </div>\n                </div>\n\n            </Drawer>\n            {toDos.length === 0?\n                    <div className=\"empty_page\">\n                        <Button onClick={handleOpen} icon=\"plus\" intent=\"success\" text=\"Add frist To-Do\" large=\"true\"/>\n                    </div>:\n                    <ul className=\"todo_ul\">\n                    {\n                        toDos.map(\n                            toDo => <ToDo key={toDo.id} {...toDo}/> \n                        )\n                    }\n                </ul>\n                }\n            \n            <AddBtn eventProps={handleOpen}/>\n        </>\n    )\n}\n\nfunction mapStateToProps(state){\n\n    const sendToDo = state.ToDoList.filter(toDo => state.date.substr(0,10) === dateToString(new Date(parseInt(toDo.id))).substr(0,10));\n\n    return {\n        toDos: sendToDo,\n        drawState: state.drawState\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setDrawState: options => dispatch(setDraw(options)),\n        onToDoRefresh: () => dispatch(toDoRefresh())\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React from 'react';\nimport { connect } from 'react-redux';\nimport FormArea from '../components/FormArea';\nimport Header from '../components/Header';\n\nfunction Detail({toDo}) {\n\n    return (\n            <>\n            <Header id={toDo.id}/>\n            <div style={{\n                padding:\"100px 20px 0px 20px\"\n            }}>\n                <FormArea toDo={toDo} type=\"update\"/>\n            </div>\n            </>\n    )\n}\n\nfunction mapStateToProps({ToDoList},ownProps){\n    const {match: {params:{id}}} = ownProps;\n    return {toDo: ToDoList.find(toDo => toDo.id === parseInt(id))};\n}\n\nexport default connect(mapStateToProps)(Detail);","import React from 'react';\nimport '../css/App.css';\n\nimport {HashRouter as Router, Route} from 'react-router-dom'\nimport Home from '../routes/Home';\nimport Detail from '../routes/Detail';\n\nfunction App() {\n  return <Router>\n    <Route path=\"/\" exact component={Home}></Route>\n    <Route path=\"/:id\" component={Detail}></Route>\n  </Router>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nimport './css/index.css';\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\n\nReactDom.render(\n    <Provider store={store}>\n        <App></App>\n    </Provider>\n    ,document.getElementById(\"root\")\n);\n"],"sourceRoot":""}