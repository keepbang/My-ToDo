{"version":3,"sources":["store.js","components/AddBtn.js","components/FormArea.js","components/Header.js","components/ToDo.js","routes/Home.js","routes/Detail.js","components/App.js","index.js"],"names":["storageKey","toDos","createSlice","name","initialState","ToDoList","JSON","parse","localStorage","getItem","drawState","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","isOpen","position","Position","BOTTOM","size","undefined","usePortal","reducers","add","payload","stateItem","title","text","id","Date","now","unshift","tmpObj","push","setItem","stringify","arrObj","update","state","console","log","updateToDo","map","toDo","remove","action","filter","obj","setDraw","actions","configureStore","reducer","AddBtn","eventProps","className","onClick","icon","iconSize","Icon","SIZE_LARGE","intent","Intent","NONE","connect","dispatch","addToDo","closeFunc","type","useState","setText","setTitle","history","useHistory","useEffect","onSubmit","e","preventDefault","alert","alwaysRenderInput","INTENT_PRIMARY","maxLength","placeholder","value","onChange","maxLines","minLines","multiline","Header","setTitleDate","date","parseInt","getFullYear","String","getMonth","padStart","getDate","ownProps","onDeleteBtn","to","fill","setDrawState","options","handleClose","handleOpen","onClose","Classes","DRAWER_BODY","DIALOG_BODY","length","large","key","match","params","find","style","padding","App","path","exact","component","Home","Detail","ReactDom","render","store","document","getElementById"],"mappings":"0ZAGMA,EAAa,wBAMbC,EAAQC,YAAY,CACtBC,KAAM,cACNC,aAAc,CACVC,SANGC,KAAKC,MAAMC,aAAaC,QAAQT,IAAaM,KAAKC,MAAMC,aAAaC,QAAQT,IAAa,GAO7FU,UAAW,CACPC,WAAW,EACXC,mBAAmB,EACnBC,sBAAsB,EACtBC,cAAc,EACdC,aAAa,EACbC,QAAQ,EACRC,SAAUC,IAASC,OACnBC,UAAMC,EACNC,WAAW,IAGnBC,SAAU,CACNC,IAAK,cAA4B,IAA1BnB,EAAyB,EAAzBA,SAAYoB,EAAa,EAAbA,QACXC,EAAY,CAACC,MAAOF,EAAQE,MAAOC,KAAMH,EAAQG,KAAMC,GAAIC,KAAKC,OACpE1B,EAAS2B,QAAQN,GACjB,IAAIO,EAASzB,aAAaC,QAAQT,GAClC,GAAc,OAAXiC,GACCA,EAAS,IACFC,KAAKR,GACZlB,aAAa2B,QAAQnC,EAAWM,KAAK8B,UAAUH,QAC9C,CACD,IAAII,EAAS/B,KAAKC,MAAM0B,GACxBI,EAAOL,QAAQN,GACflB,aAAa2B,QAAQnC,EAAWM,KAAK8B,UAAUC,MAGvDC,OAAQ,SAACC,EAAD,GAAuB,IAAdd,EAAa,EAAbA,QACbe,QAAQC,IAAIhB,GACZ,IAAIC,EAAY,CAACC,MAAOF,EAAQE,MAAOC,KAAMH,EAAQG,KAAMC,GAAIJ,EAAQI,IACnEa,EAAaH,EAAMlC,SAASsC,KAAI,SAAAC,GAAI,OAAKA,EAAKf,KAAOH,EAAUG,GAAGH,EAAUkB,KAEhF,OADApC,aAAa2B,QAAQnC,EAAWM,KAAK8B,UAAUM,IACxC,2BAAIH,GAAX,IAAiBlC,SAAWqC,KAEhCG,OAAQ,SAACN,EAAOO,GACZ,IAAIT,EAAS/B,KAAKC,MAAMC,aAAaC,QAAQT,IAI7C,OAHAqC,EAASA,EAAOU,QAAO,SAAAC,GAAG,OAAIA,EAAInB,KAAOiB,EAAOrB,WAChDjB,aAAa2B,QAAQnC,EAAWM,KAAK8B,UAAUC,IAExC,2BAAIE,GAAX,IAAiBlC,SAAWkC,EAAMlC,SAAS0C,QAAO,SAAAH,GAAI,OAAIA,EAAKf,KAAOiB,EAAOrB,cAEjFwB,QAAS,SAACV,EAAMO,GACZ,OAAO,2BAAIP,GAAX,IAAiB7B,UAAU,2BAAK6B,EAAM7B,WAAaoC,EAAOrB,e,EAUlExB,EAAMiD,QAJN1B,E,EAAAA,IACAc,E,EAAAA,OACAO,E,EAAAA,OACAI,E,EAAAA,QAGWE,cAAe,CAACC,QAASnD,EAAMmD,U,0BCvD/BC,G,OARA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OAAO,oCACH,yBAAKC,UAAU,UAAUC,QAASF,GAC9B,kBAAC,IAAD,CAAMG,KAAK,kBAAkBC,SAAUC,IAAKC,WAAYC,OAAQC,IAAOC,W,wBCgFpEC,kBAAQ,MAPvB,SAA4BC,GACxB,MAAO,CACHC,QAAS,SAAClB,GAAD,OAASiB,EAASzC,EAAIwB,KAC/BN,WAAY,SAACM,GAAD,OAASiB,EAAS3B,EAAOU,QAI9BgB,EA/EE,SAAC,GAAiD,IAAhDE,EAA+C,EAA/CA,QAAQxB,EAAuC,EAAvCA,WAAYyB,EAA2B,EAA3BA,UAAWvB,EAAgB,EAAhBA,KAAMwB,EAAU,EAAVA,KAAU,EAEvCC,mBAAS,IAF8B,mBAEvDzC,EAFuD,KAElD0C,EAFkD,OAGpCD,mBAAS,IAH2B,mBAGvD1C,EAHuD,KAGhD4C,EAHgD,KAIxDC,EAAUC,cAiChB,OA/BAC,qBAAU,WACa,qBAAT9B,GAAiC,WAATwB,IAC9BG,EAAS3B,EAAKjB,OACd2C,EAAQ1B,EAAKhB,SAGlB,CAACwC,EAAKxB,IAyBF,oCACH,0BAAM+B,SAhBV,SAAkBC,GACdA,EAAEC,iBACW,KAAVlD,EAIS,WAATyC,GAA0C,oBAAdD,GAC3BzB,EAAW,CAACf,QAAOC,OAAKC,GAAIe,EAAKf,KACjC2C,EAAQtC,KAAK,OAEbgC,EAAQ,CAACvC,QAAMC,SACfuC,KARAW,MAAM,qDAagBvB,UAAU,aAChC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIwB,mBAAmB,EACnBlB,OAAQmB,iBACRC,UAAW,IACXC,YAAY,iBACZC,MAAOxD,EACPyD,SA5BhB,SAAuBD,GACnBZ,EAASY,OA8BL,kBAAC,IAAD,CACQJ,mBAAmB,EACnBlB,OAAQmB,iBACRK,SAAU,GACVC,SAAU,EACVC,WAAW,EACXL,YAAY,gBACZE,SA1ChB,SAAsBD,GAClBb,EAAQa,IA0CIA,MAAOvD,IAEf,yBAAK2B,UAAU,gBACX,kBAAC,IAAD,CACIA,UAAU,WACVa,KAAK,SACLX,KAA2B,oBAAdU,EAAyB,MAAM,UAC5CN,OAA6B,oBAAdM,EAAyB,UAAU,UAClDvC,KAA2B,oBAAduC,EAAyB,MAAM,iBC7CjDqB,G,OAzBA,SAAC,GAAU,IAAT3D,EAAQ,EAARA,GAAQ,EACKwC,mBAAS,IADd,mBACd1C,EADc,KACP4C,EADO,KAGrBG,qBAAU,WAEFH,EAASkB,EADI,qBAAP5D,EACgBA,EAEAC,KAAKC,UAEhC,CAACF,IAEJ,IAAM4D,EAAe,SAAC5D,GAClB,IAAI6D,EAAO,IAAI5D,KAAK6D,SAAS9D,IAK7B,OAJiB6D,EAAKE,cAAgB,IACtBC,OAAOH,EAAKI,WAAa,GAAGC,SAAS,EAAE,KAAO,IAC9CF,OAAOH,EAAKM,WAAWD,SAAS,EAAE,MAKtD,OAAO,oCACH,wBAAIxC,UAAU,cAAc5B,M,OCErBqC,kBAAQ,MANvB,SAA4BC,EAASgC,GACjC,MAAO,CACHC,YAAa,kBAAMjC,EAASpB,EAAOoD,EAASpE,SAIrCmC,EAnBf,YAAwC,IAAzBnC,EAAwB,EAAxBA,GAAGF,EAAqB,EAArBA,MAAOuE,EAAc,EAAdA,YACrB,OACI,wBAAIrE,GAAIA,EAAI0B,UAAU,YAClB,kBAAC,IAAD,CAAM4C,GAAE,WAAMtE,IACV,yBAAK0B,UAAU,eAAe5B,IAElC,yBAAK4B,UAAU,aACX,kBAAC,IAAD,CAAQC,QAAS0C,EAAaE,MAAM,EAAM7C,UAAU,YAAYE,KAAK,QAAQI,OAAO,gB,OCgDrFG,mBAbf,SAAyBzB,GACrB,MAAO,CACHtC,MAAOsC,EAAMlC,SACbK,UAAW6B,EAAM7B,cAIzB,SAA4BuD,GACxB,MAAO,CACHoC,aAAc,SAAAC,GAAO,OAAIrC,EAAShB,EAAQqD,QAInCtC,EAlDf,YAAiD,IAAlC/D,EAAiC,EAAjCA,MAAOS,EAA0B,EAA1BA,UAAW2F,EAAe,EAAfA,aAEvBE,EAAc,WAAOF,EAAa,CAACrF,QAAO,KAC1CwF,EAAa,WAAOH,EAAa,CAACrF,QAAO,KAE/C,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,IAAD,eACIyC,KAAK,aACLgD,QAASF,EACT5E,MAAM,YACFjB,GAEJ,yBAAK6C,UAAWmD,IAAQC,aACpB,yBAAKpD,UAAWmD,IAAQE,aACpB,kBAAC,EAAD,CAAUzC,UAAWoC,OAKf,IAAjBtG,EAAM4G,OACC,yBAAKtD,UAAU,cACX,kBAAC,IAAD,CAAQC,QAASgD,EAAY/C,KAAK,OAAOI,OAAO,UAAUjC,KAAK,kBAAkBkF,MAAM,UAE3F,wBAAIvD,UAAU,WAEVtD,EAAM0C,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,eAAMmE,IAAKnE,EAAKf,IAAQe,QAKtD,kBAAC,EAAD,CAAQU,WAAYkD,QCpBjBxC,mBALf,WAAoCiC,GAAU,IAApB5F,EAAmB,EAAnBA,SACCwB,EAAQoE,EAAxBe,MAAQC,OAAQpF,GACvB,MAAO,CAACe,KAAMvC,EAAS6G,MAAK,SAAAtE,GAAI,OAAIA,EAAKf,KAAO8D,SAAS9D,SAG9CmC,EAnBf,YAAyB,IAARpB,EAAO,EAAPA,KAEb,OACQ,oCACA,kBAAC,EAAD,CAAQf,GAAIe,EAAKf,KACjB,yBAAKsF,MAAO,CACRC,QAAQ,wBAER,kBAAC,EAAD,CAAUxE,KAAMA,EAAMwB,KAAK,gBCC5BiD,MAPf,WACE,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,OAAOE,UAAWE,M,qBCGlCC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,EAAD,OAEHC,SAASC,eAAe,W","file":"static/js/main.03a4cc0b.chunk.js","sourcesContent":["import { Position } from \"@blueprintjs/core\";\r\nimport {configureStore, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst storageKey = \"Keepbang.ToDo.Storage\";\r\n\r\nconst initState = () => {\r\n    return JSON.parse(localStorage.getItem(storageKey))?JSON.parse(localStorage.getItem(storageKey)):[];\r\n}\r\n\r\nconst toDos = createSlice({\r\n    name: 'toDoReducer',\r\n    initialState: {\r\n        ToDoList: initState(),\r\n        drawState: {\r\n            autoFocus: true,\r\n            canEscapeKeyClose: true,\r\n            canOutsideClickClose: true,\r\n            enforceFocus: true,\r\n            hasBackdrop: true,\r\n            isOpen: false,\r\n            position: Position.BOTTOM,\r\n            size: undefined,\r\n            usePortal: true,\r\n        }\r\n    },\r\n    reducers: {\r\n        add: ({ToDoList}, {payload}) => {\r\n            let stateItem = {title: payload.title, text: payload.text, id: Date.now()};\r\n            ToDoList.unshift(stateItem);\r\n            let tmpObj = localStorage.getItem(storageKey);\r\n            if(tmpObj === null){\r\n                tmpObj = [];\r\n                tmpObj.push(stateItem);\r\n                localStorage.setItem(storageKey,JSON.stringify(tmpObj));\r\n            }else{\r\n                let arrObj = JSON.parse(tmpObj);\r\n                arrObj.unshift(stateItem);\r\n                localStorage.setItem(storageKey,JSON.stringify(arrObj));\r\n            }\r\n        },\r\n        update: (state, {payload}) => {\r\n            console.log(payload);\r\n            let stateItem = {title: payload.title, text: payload.text, id: payload.id};\r\n            let updateToDo = state.ToDoList.map(toDo => (toDo.id === stateItem.id?stateItem:toDo));\r\n            localStorage.setItem(storageKey,JSON.stringify(updateToDo));\r\n            return {...state,ToDoList : updateToDo}\r\n        },\r\n        remove: (state, action) => {\r\n            let arrObj = JSON.parse(localStorage.getItem(storageKey));\r\n            arrObj = arrObj.filter(obj => obj.id !== action.payload);\r\n            localStorage.setItem(storageKey,JSON.stringify(arrObj));\r\n\r\n            return {...state,ToDoList : state.ToDoList.filter(toDo => toDo.id !== action.payload)};\r\n        },\r\n        setDraw: (state,action) => {\r\n            return {...state,drawState: {...state.drawState,...action.payload}}\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    add,\r\n    update,\r\n    remove,\r\n    setDraw\r\n} = toDos.actions\r\n\r\nexport default configureStore({reducer: toDos.reducer});","import { Icon, Intent } from '@blueprintjs/core'\r\nimport React from 'react'\r\nimport '../css/AddBtn.scss'\r\n\r\nconst AddBtn = ({eventProps}) => {\r\n    return <>\r\n        <div className=\"add_btn\" onClick={eventProps}>\r\n            <Icon icon=\"add-to-artifact\" iconSize={Icon.SIZE_LARGE} intent={Intent.NONE}/>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default AddBtn;","import { Button, EditableText, H3 } from '@blueprintjs/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { add, update } from '../store';\r\nimport '../css/FormArea.scss';\r\nimport { INTENT_PRIMARY } from '@blueprintjs/core/lib/esm/common/classes';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FormArea = ({addToDo,updateToDo, closeFunc, toDo, type}) => {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(typeof toDo !== \"undefined\" && type === \"update\"){\r\n            setTitle(toDo.title);\r\n            setText(toDo.text);\r\n        }\r\n        \r\n    }, [type,toDo])\r\n\r\n    function onChangeText(value){\r\n        setText(value);\r\n    }\r\n\r\n    function onChangeTitle(value){\r\n        setTitle(value);\r\n    }\r\n\r\n    function onSubmit(e){\r\n        e.preventDefault();\r\n        if(title === \"\"){\r\n            alert(\"Title을 입력해주세요\");\r\n            return;\r\n        }\r\n        if(type === \"update\" && typeof closeFunc !== \"function\"){\r\n            updateToDo({title, text,id: toDo.id});\r\n            history.push('/');\r\n        }else{\r\n            addToDo({title,text});\r\n            closeFunc();\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <form onSubmit={onSubmit} className=\"form_area\">\r\n            <H3>\r\n                <EditableText\r\n                    alwaysRenderInput={true}\r\n                    intent={INTENT_PRIMARY}\r\n                    maxLength={100}\r\n                    placeholder=\"Write title...\"\r\n                    value={title}\r\n                    onChange={onChangeTitle}\r\n                />\r\n            </H3>\r\n            <EditableText\r\n                    alwaysRenderInput={true}\r\n                    intent={INTENT_PRIMARY}\r\n                    maxLines={12}\r\n                    minLines={3}\r\n                    multiline={true}\r\n                    placeholder=\"Write ToDo...\"\r\n                    onChange={onChangeText}\r\n                    value={text}\r\n                />\r\n            <div className=\"add_btn_area\">\r\n                <Button\r\n                    className=\"add__btn\"\r\n                    type=\"submit\"\r\n                    icon={typeof closeFunc === \"function\"?\"add\":\"changes\"}\r\n                    intent={typeof closeFunc === \"function\"?\"success\":\"primary\"}\r\n                    text={typeof closeFunc === \"function\"?\"ADD\":\"UPDATE\"}\r\n                />\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        addToDo: (obj) => dispatch(add(obj)),\r\n        updateToDo: (obj) => dispatch(update(obj))\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(FormArea);","import React, { useEffect, useState } from 'react';\r\nimport '../css/Header.scss';\r\n\r\nconst Header = ({id}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(typeof id !== \"undefined\"){\r\n            setTitle(setTitleDate(id));\r\n        }else{\r\n            setTitle(setTitleDate(Date.now()));\r\n        }\r\n    }, [id])\r\n\r\n    const setTitleDate = (id) => {\r\n        let date = new Date(parseInt(id));\r\n        let formatDate = date.getFullYear() + \"-\" + \r\n                        String(date.getMonth() + 1).padStart(2,'0') + \"-\" + \r\n                        String(date.getDate()).padStart(2,'0');\r\n\r\n        return formatDate;\r\n    }\r\n\r\n    return <>\r\n        <h2 className=\"home_title\">{title}</h2>\r\n    </>\r\n}\r\n\r\nexport default Header;","import { Button } from '@blueprintjs/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { remove } from '../store';\r\nimport '../css/ToDo.scss';\r\n\r\nfunction ToDo({id,title, onDeleteBtn}) {\r\n    return(\r\n        <li id={id} className=\"todo__li\">\r\n            <Link to={`/${id}`}>\r\n                <div className=\"todo___text\">{title}</div>\r\n            </Link>\r\n            <div className=\"btn__area\">\r\n                <Button onClick={onDeleteBtn} fill={true} className=\"del___btn\" icon=\"trash\" intent=\"danger\"/>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch,ownProps){\r\n    return {\r\n        onDeleteBtn: () => dispatch(remove(ownProps.id))\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(ToDo);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setDraw } from '../store';\r\nimport '../css/Home.scss';\r\n\r\nimport AddBtn from '../components/AddBtn';\r\nimport FormArea from '../components/FormArea';\r\nimport Header from '../components/Header';\r\nimport ToDo from '../components/ToDo';\r\n\r\nimport { Button, Classes, Drawer } from '@blueprintjs/core';\r\n\r\nfunction Home({toDos, drawState, setDrawState}) {\r\n\r\n    const handleClose = () => {setDrawState({isOpen:false})};\r\n    const handleOpen = () => {setDrawState({isOpen:true})};\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Drawer\r\n                icon=\"annotation\"\r\n                onClose={handleClose}\r\n                title=\"Add ToDo\"\r\n                {...drawState}\r\n            >\r\n                <div className={Classes.DRAWER_BODY}>\r\n                    <div className={Classes.DIALOG_BODY}>\r\n                        <FormArea closeFunc={handleClose}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </Drawer>\r\n            {toDos.length === 0?\r\n                    <div className=\"empty_page\">\r\n                        <Button onClick={handleOpen} icon=\"plus\" intent=\"success\" text=\"Add frist To-Do\" large=\"true\"/>\r\n                    </div>:\r\n                    <ul className=\"todo_ul\">\r\n                    {\r\n                        toDos.map(toDo => <ToDo key={toDo.id} {...toDo}/>)\r\n                    }\r\n                </ul>\r\n                }\r\n            \r\n            <AddBtn eventProps={handleOpen}/>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        toDos: state.ToDoList,\r\n        drawState: state.drawState\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        setDrawState: options => dispatch(setDraw(options))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormArea from '../components/FormArea';\r\nimport Header from '../components/Header';\r\n\r\nfunction Detail({toDo}) {\r\n\r\n    return (\r\n            <>\r\n            <Header id={toDo.id}/>\r\n            <div style={{\r\n                padding:\"100px 20px 0px 20px\"\r\n            }}>\r\n                <FormArea toDo={toDo} type=\"update\"/>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps({ToDoList},ownProps){\r\n    const {match: {params:{id}}} = ownProps;\r\n    return {toDo: ToDoList.find(toDo => toDo.id === parseInt(id))};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Detail);","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\nimport Home from '../routes/Home';\r\nimport Detail from '../routes/Detail';\r\n\r\nfunction App() {\r\n  return <Router>\r\n    <Route path=\"/\" exact component={Home}></Route>\r\n    <Route path=\"/:id\" component={Detail}></Route>\r\n  </Router>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nimport './css/index.css';\r\n\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\n\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App></App>\r\n    </Provider>\r\n    ,document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}