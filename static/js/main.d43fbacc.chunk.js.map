{"version":3,"sources":["store.js","components/ToDo.js","routes/Home.js","routes/Detail.js","components/App.js","index.js"],"names":["storageKey","toDos","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","add","state","action","stateItem","text","payload","id","Date","now","unshift","tmpObj","push","setItem","stringify","arrObj","remove","filter","obj","toDo","actions","configureStore","reducer","connect","dispatch","ownProps","onDeleteBtn","to","onClick","addToDo","useState","setText","onSubmit","e","preventDefault","alert","onChange","target","value","type","placeholder","map","key","match","params","find","parseInt","console","log","App","path","exact","component","Home","Detail","ReactDom","render","store","document","getElementById"],"mappings":"wQAEMA,EAAa,wBAMbC,EAAQC,YAAY,CACtBC,KAAM,cACNC,aALOC,KAAKC,MAAMC,aAAaC,QAAQR,IAAaK,KAAKC,MAAMC,aAAaC,QAAQR,IAAa,GAMjGS,SAAU,CACNC,IAAK,SAACC,EAAOC,GACT,IAAIC,EAAY,CAAEC,KAAMF,EAAOG,QAASC,GAAIC,KAAKC,OACjDP,EAAMQ,QAAQN,GACd,IAAIO,EAASb,aAAaC,QAAQR,GAClC,GAAc,OAAXoB,GACCA,EAAS,IACFC,KAAKR,GACZN,aAAae,QAAQtB,EAAWK,KAAKkB,UAAUH,QAC9C,CACD,IAAII,EAASnB,KAAKC,MAAMc,GACxBI,EAAOL,QAAQN,GACfN,aAAae,QAAQtB,EAAWK,KAAKkB,UAAUC,MAGvDC,OAAQ,SAACd,EAAOC,GACZ,IAAIY,EAASnB,KAAKC,MAAMC,aAAaC,QAAQR,IAI7C,OAHAwB,EAASA,EAAOE,QAAO,SAAAC,GAAG,OAAIA,EAAIX,KAAOJ,EAAOG,WAChDR,aAAae,QAAQtB,EAAWK,KAAKkB,UAAUC,IAExCb,EAAMe,QAAO,SAAAE,GAAI,OAAIA,EAAKZ,KAAOJ,EAAOG,e,EAQvDd,EAAM4B,QAFNnB,E,EAAAA,IACAe,E,EAAAA,OAGWK,cAAe,CAACC,QAAS9B,EAAM8B,UCnB/BC,kBAAQ,MANvB,SAA4BC,EAASC,GACjC,MAAO,CACHC,YAAa,kBAAMF,EAASR,EAAOS,EAASlB,SAIrCgB,EAjBf,YAAuC,IAAxBlB,EAAuB,EAAvBA,KAAKE,EAAkB,EAAlBA,GAAImB,EAAc,EAAdA,YACpB,OACI,wBAAInB,GAAIA,GACJ,kBAAC,IAAD,CAAMoB,GAAE,WAAMpB,IACTF,GAEL,4BAAQuB,QAASF,GAAjB,WCsCGH,mBAVf,SAAyBrB,GACrB,MAAO,CAACV,MAAOU,MAGnB,SAA4BsB,GACxB,MAAO,CACHK,QAAS,SAAAxB,GAAI,OAAImB,EAASvB,EAAII,QAIvBkB,EA5Cf,YAAiC,IAAlB/B,EAAiB,EAAjBA,MAAOqC,EAAU,EAAVA,QAAU,EACLC,mBAAS,IADJ,mBACrBzB,EADqB,KAChB0B,EADgB,KAkB5B,OACI,oCACI,qCACA,0BAAMC,SAbd,SAAkBC,GACdA,EAAEC,iBACU,KAAT7B,EACC8B,MAAM,sFAENN,EAAQxB,GACR0B,EAAQ,OAQJ,2BAAOK,SAlBnB,SAAkBH,GACdF,EAAQE,EAAEI,OAAOC,QAiBkBC,KAAK,OAAOC,YAAY,gBAAgBF,MAAOjC,IAC1E,wCAEJ,4BAEQb,EAAMiD,KAAI,SAAAtB,GAAI,OAAI,kBAAC,EAAD,eAAMuB,IAAKvB,EAAKZ,IAAQY,YCV/CI,mBALf,SAAyBrB,EAAMuB,GAAU,IACdlB,EAAQkB,EAAxBkB,MAAQC,OAAQrC,GACvB,MAAO,CAACY,KAAMjB,EAAM2C,MAAK,SAAA1B,GAAI,OAAIA,EAAKZ,KAAOuC,SAASvC,SAG3CgB,EAnBf,YAAyB,IAARJ,EAAO,EAAPA,KAEb,OADA4B,QAAQC,IAAI7B,GAEJ,oCACI,mCACKA,QADL,IACKA,OADL,EACKA,EAAMd,MAEX,kDACiBc,QADjB,IACiBA,OADjB,EACiBA,EAAMZ,QCGxB0C,MAPf,WACE,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,OAAOE,UAAWE,MCFlCC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,EAAD,OAEHC,SAASC,eAAe,W","file":"static/js/main.d43fbacc.chunk.js","sourcesContent":["import {configureStore, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst storageKey = \"Keepbang.ToDo.Storage\";\r\n\r\nconst initState = () => {\r\n    return JSON.parse(localStorage.getItem(storageKey))?JSON.parse(localStorage.getItem(storageKey)):[];\r\n}\r\n\r\nconst toDos = createSlice({\r\n    name: 'toDoReducer',\r\n    initialState: initState(),\r\n    reducers: {\r\n        add: (state, action) => {\r\n            let stateItem = { text: action.payload, id: Date.now()};\r\n            state.unshift(stateItem);\r\n            let tmpObj = localStorage.getItem(storageKey);\r\n            if(tmpObj === null){\r\n                tmpObj = [];\r\n                tmpObj.push(stateItem);\r\n                localStorage.setItem(storageKey,JSON.stringify(tmpObj));\r\n            }else{\r\n                let arrObj = JSON.parse(tmpObj);\r\n                arrObj.unshift(stateItem);\r\n                localStorage.setItem(storageKey,JSON.stringify(arrObj));\r\n            }\r\n        },\r\n        remove: (state, action) => {\r\n            let arrObj = JSON.parse(localStorage.getItem(storageKey));\r\n            arrObj = arrObj.filter(obj => obj.id !== action.payload);\r\n            localStorage.setItem(storageKey,JSON.stringify(arrObj));\r\n\r\n            return state.filter(toDo => toDo.id !== action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    add,\r\n    remove\r\n} = toDos.actions\r\n\r\nexport default configureStore({reducer: toDos.reducer});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { remove } from '../store';\r\n\r\nfunction ToDo({text,id, onDeleteBtn}) {\r\n    return(\r\n        <li id={id}>\r\n            <Link to={`/${id}`}>\r\n                {text} \r\n            </Link>\r\n            <button onClick={onDeleteBtn}>DEL</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch,ownProps){\r\n    return {\r\n        onDeleteBtn: () => dispatch(remove(ownProps.id))\r\n    };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(ToDo);","import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDo from '../components/ToDo';\r\nimport {add} from '../store';\r\n\r\nfunction Home({toDos, addToDo}) {\r\n    const [text,setText] = useState(\"\");\r\n\r\n\r\n    function onChange(e){\r\n        setText(e.target.value);\r\n    }\r\n\r\n    function onSubmit(e){\r\n        e.preventDefault();\r\n        if(text === \"\"){\r\n            alert(\"아무것도 입력하지 않았습니다.\");\r\n        }else{\r\n            addToDo(text);\r\n            setText(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>To Do</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <input onChange={onChange} type=\"text\" placeholder=\"Write ToDo...\" value={text}/>\r\n                <button>ADD</button>\r\n            </form>\r\n            <ul>\r\n                {\r\n                    toDos.map(toDo => <ToDo key={toDo.id} {...toDo}/>)\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {toDos: state};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        addToDo: text => dispatch(add(text))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Detail({toDo}) {\r\n    console.log(toDo);\r\n    return (\r\n            <>\r\n                <h1>\r\n                    {toDo?.text}\r\n                </h1>\r\n                <h2>\r\n                    Create at : {toDo?.id}\r\n                </h2>\r\n            </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state,ownProps){\r\n    const {match: {params:{id}}} = ownProps;\r\n    return {toDo: state.find(toDo => toDo.id === parseInt(id))};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Detail);","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\nimport Home from '../routes/Home';\r\nimport Detail from '../routes/Detail';\r\n\r\nfunction App() {\r\n  return <Router>\r\n    <Route path=\"/\" exact component={Home}></Route>\r\n    <Route path=\"/:id\" component={Detail}></Route>\r\n  </Router>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App></App>\r\n    </Provider>\r\n    ,document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}